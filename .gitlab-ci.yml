image: $SKA_K8S_TOOLS_DOCKER_BUILDER_IMAGE

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  DOCKER_DRIVER: overlay2

cache:
  paths:
    - build

stages:
  - test

include:

  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/k8s.gitlab-ci.yml'


k8s-test:
  variables:
    KUBE_NAMESPACE: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA'
    SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA"
  before_script:
    - make cred SERVICE_ACCOUNT=$SERVICE_ACCOUNT
    - '[ -f .make/k8s.mk ] || (echo "File k8s.mk not included in Makefile; exit 1")'
    - 'make help | grep k8s-test'
    - make k8s-install-chart
    - make k8s-wait
  after_script:
    - pip3 install -q -U ska-ser-xray
    - XRAY_TEST_RESULT_FILE="build/cucumber.json" make xray-publish
  when: manual

k8s-test-tmc-with-csp:
  extends:
    - k8s-test
  variables:
    KUBE_NAMESPACE: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-csp-low'
    SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-csp-low"
    MARK: 'tmc_csp'
    COUNT: 1
    CSP_SIMULATION_ENABLED: 'false'
  environment:
    name: test/$CI_COMMIT_REF_SLUG
    on_stop: stop-k8s-test-tmc-with-csp
  when: always

stop-k8s-test-tmc-with-csp:
  extends:
    - stop-k8s-test
  variables:
    KUBE_NAMESPACE: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-csp-low'

# k8s-test-tmc-with-sdp:
#   tags:
#     - ska-k8s
#   variables:
#     TELESCOPE: 'SKA-low'
#     PORT: "10000"
#     KUBE_NAMESPACE: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-tmc-sdp'
#     KUBE_NAMESPACE_SDP: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-sdp'
#     SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-tmc-sdp"
#     SDP_SIMULATION_ENABLED: 'false'
#   script:
#     - make cred SERVICE_ACCOUNT=$SERVICE_ACCOUNT
#     - make cred KUBE_NAMESPACE=$KUBE_NAMESPACE_SDP
#     - '[ -f .make/k8s.mk ] || (echo "File k8s.mk not included in Makefile; exit 1")'
#     - 'make help | grep k8s-test'
#     - make k8s-install-chart SDP_PROCCONTROL_REPLICAS=0
#     - make k8s-wait 
#     - make k8s-wait KUBE_APP="ska-sdp"
#     - make k8s-test MARK='tmc_sdp_unhappy_path'
#     - make k8s-install-chart SDP_PROCCONTROL_REPLICAS=1
#     - make k8s-wait
#     - make k8s-wait KUBE_APP="ska-sdp"
#     - make k8s-test MARK='tmc_sdp'
#   after_script:
#     - pip3 install -q -U ska-ser-xray
#     - XRAY_TEST_RESULT_FILE="build/cucumber.json" make xray-publish
#   environment:
#     name: test/$CI_COMMIT_REF_SLUG
#     on_stop: stop-k8s-test-tmc-with-sdp
    
# stop-k8s-test-tmc-with-sdp:
#   extends:
#     - stop-k8s-test
#   variables:
#     KUBE_NAMESPACE: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-tmc-sdp'
#     SDP_SIMULATION_ENABLED: 'false'
    
# k8s-test-tmc-with-mccs:
#   extends:
#     - k8s-test
#   variables:
#     KUBE_NAMESPACE: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-mccs-low'
#     SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-mccs-low"
#     MARK: 'tmc_mccs'
#     MCCS_SIMULATION_ENABLED: 'false'
#   before_script:
#     - make cred SERVICE_ACCOUNT=$SERVICE_ACCOUNT
#     - '[ -f .make/k8s.mk ] || (echo "File k8s.mk not included in Makefile; exit 1")'
#     - 'make help | grep k8s-test'
#     - make k8s-install-chart
#     - make k8s-wait
#   environment:
#     name: test/$CI_COMMIT_REF_SLUG
#     on_stop: stop-k8s-test-tmc-with-mccs

# stop-k8s-test-tmc-with-mccs:
#   extends:
#     - stop-k8s-test
#   variables:
#     KUBE_NAMESPACE: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-mccs-low'

